<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>python学习(1)</title>
      <link href="/2021/09/03/py1/"/>
      <url>/2021/09/03/py1/</url>
      
        <content type="html"><![CDATA[<h1 id="for循环"><a href="#for循环" class="headerlink" title="for循环"></a>for循环</h1><p>for i in 循环体<br>使用如下代码打印10以内所有素数</p><pre><code class="python">for i in range(2,10):    for x in range(2,i):        if i % x==0:            print(i,&#39;/&#39;,x,&quot;=&quot;,i/x,sep=&#39;&#39;)            break        else:            print(i,&quot;是素数。&quot;)</code></pre><h1 id="len函数"><a href="#len函数" class="headerlink" title="len函数"></a>len函数</h1><p>len函数可以输出某个序列(字符串，列表)的长度</p><h1 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h1><p>列表可用于储存多个不同类型的循环体</p><pre><code class="python">list=[数据1，数据2，数据3]#可用下标法取出某个数据list[0]#第一个数据list[-1]#倒数第一个数据list[开始值(默认为0)：结束值，步进值]list[::-1]#可反顺序取出数据list[:5]#第六个数据之前的所有数据list[1:]#第二个数据之后的所有数据</code></pre><h1 id="列表使用"><a href="#列表使用" class="headerlink" title="列表使用"></a>列表使用</h1><h2 id="对象的增添"><a href="#对象的增添" class="headerlink" title="对象的增添"></a>对象的增添</h2><p>列表名.append(添加单个对象)<br>列表名.extend(添加可迭代对象)<br>列表名.insert(添加位置（即下标），添加元素)<br>切片法<br>如list=[1,2,3,4,5,6]<br>list[ len(list) : ]=[7]<br>list=[1,2,3,4,5,6,7]</p><h2 id="对象的移除"><a href="#对象的移除" class="headerlink" title="对象的移除"></a>对象的移除</h2><p>列表名.remove（移除单个对象）<br>列表名.pop（移除位置（即下标））<br>列表名.clear（）清空列表</p><h2 id="其他操作"><a href="#其他操作" class="headerlink" title="其他操作"></a>其他操作</h2><p>列表名.sort（）排序（从小到大）<br>列表名.reverse（）排序（从大到小）<br>列表名.copy  拷贝列表</p><p>列表名.count（查找元素）计数元素出现次数<br>列表名.index（查找元素，start，end）查询元素下标</p><h2 id="注"><a href="#注" class="headerlink" title="注"></a>注</h2><p>列表对象存储问题<br>    对于B=[[0]*3]*3<br>    该列表内三个嵌套列表均为一个对象，使用同一内存地址。<br>    其在修改元素值时会导致全部嵌套列表值改变，原因就是内存地址相同<br>    对于A=[None]*3<br>        for each in range(3):<br>            A[each]=[0,0,0]<br>    其使用的内存地址不同。同样的，列表中即使相同的元素存储位置一样不同，除非使用类似B列表的方法<br>对于超过了-5~256的数据的存储，python使用不同地址进行储存。</p><p>深度拷贝需要应用copy模块<br>通过语句import.copy<br>copy.copy(模块名)实现浅拷贝<br>copy.deepcopy(模块名)实现深拷贝</p>]]></content>
      
      
      <categories>
          
          <category> 编程语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>终于....</title>
      <link href="/2021/09/01/hello-world/"/>
      <url>/2021/09/01/hello-world/</url>
      
        <content type="html"><![CDATA[<p>在与hexo斗智斗勇n小时后，我终于摸到了一点门路…<br>其实不是很难啦</p>]]></content>
      
      
      <categories>
          
          <category> 杂谈 </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
</search>
